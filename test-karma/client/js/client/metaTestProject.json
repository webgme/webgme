{
  "bases": {},
  "root": {
    "path": "",
    "guid": "153d06f6-478c-0812-776b-94327a563db9"
  },
  "relids": {
    "0eb1dae1-96b8-4f47-a3f9-a0cd533297b9": "1865460677",
    "153d06f6-478c-0812-776b-94327a563db9": null,
    "3a6e7553-2bbd-997d-2dbe-c5dec5f95d6d": "346456409",
    "4718381b-9129-a50d-a185-f28e39736425": "450510476",
    "747d624d-6b22-6fa7-c13b-4811d2770cf5": "1687616515",
    "98746c70-6211-e723-fe04-7d4e7166c04d": "1730437907",
    "bd4a9e60-8153-6f3c-575c-d022d2a493ba": "1206889674",
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": "1",
    "d4a744a2-041d-c558-dcf1-0bd86399a500": "11762112",
    "e3d8f760-c9ee-1c52-ceca-1e966158ec3a": "1004119088",
    "ff32967b-910f-97d8-76b8-7cd6489d43ce": "1161785859"
  },
  "containment": {
    "0eb1dae1-96b8-4f47-a3f9-a0cd533297b9": {},
    "3a6e7553-2bbd-997d-2dbe-c5dec5f95d6d": {},
    "4718381b-9129-a50d-a185-f28e39736425": {},
    "747d624d-6b22-6fa7-c13b-4811d2770cf5": {},
    "98746c70-6211-e723-fe04-7d4e7166c04d": {},
    "bd4a9e60-8153-6f3c-575c-d022d2a493ba": {},
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": {},
    "d4a744a2-041d-c558-dcf1-0bd86399a500": {},
    "e3d8f760-c9ee-1c52-ceca-1e966158ec3a": {},
    "ff32967b-910f-97d8-76b8-7cd6489d43ce": {}
  },
  "nodes": {
    "0eb1dae1-96b8-4f47-a3f9-a0cd533297b9": {
      "attributes": {
        "name": "child"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "children": {
          "items": [
            "747d624d-6b22-6fa7-c13b-4811d2770cf5",
            "98746c70-6211-e723-fe04-7d4e7166c04d"
          ],
          "minItems": [
            -1,
            -1
          ],
          "maxItems": [
            -1,
            -1
          ]
        },
        "aspects": {
          "onlyOne": [
            "98746c70-6211-e723-fe04-7d4e7166c04d"
          ]
        }
      },
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "position": {
          "x": 314,
          "y": 173
        }
      },
      "sets": {
        "onlyOne": []
      },
      "constraints": {}
    },
    "153d06f6-478c-0812-776b-94327a563db9": {
      "attributes": {
        "name": "ROOT"
      },
      "base": null,
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "children": {
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ],
          "items": [
            "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
          ]
        }
      },
      "parent": null,
      "pointers": {
        "base": null
      },
      "registry": {
        "MetaSheets": [
          {
            "SetID": "MetaAspectSet_d1568692-f853-8aaf-b583-f671fc7def82",
            "order": 0,
            "title": "META"
          }
        ],
        "ProjectRegistry": {
          "FCO_ID": "/1"
        },
        "usedAddOns": "ConstraintAddOn",
        "validPlugins": ""
      },
      "sets": {
        "MetaAspectSet": [
          {
            "attributes": {},
            "guid": "0eb1dae1-96b8-4f47-a3f9-a0cd533297b9",
            "registry": {
              "position": {
                "x": 314,
                "y": 173
              }
            }
          },
          {
            "attributes": {},
            "guid": "3a6e7553-2bbd-997d-2dbe-c5dec5f95d6d",
            "registry": {
              "position": {
                "x": 511,
                "y": 225
              }
            }
          },
          {
            "attributes": {},
            "guid": "4718381b-9129-a50d-a185-f28e39736425",
            "registry": {
              "position": {
                "x": 339,
                "y": 348
              }
            }
          },
          {
            "attributes": {},
            "guid": "747d624d-6b22-6fa7-c13b-4811d2770cf5",
            "registry": {
              "position": {
                "x": 84,
                "y": 394
              }
            }
          },
          {
            "attributes": {},
            "guid": "98746c70-6211-e723-fe04-7d4e7166c04d",
            "registry": {
              "position": {
                "x": 76,
                "y": 246
              }
            }
          },
          {
            "attributes": {},
            "guid": "bd4a9e60-8153-6f3c-575c-d022d2a493ba",
            "registry": {
              "position": {
                "x": 659,
                "y": 80
              }
            }
          },
          {
            "attributes": {},
            "guid": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
            "registry": {
              "position": {
                "x": 100,
                "y": 100
              }
            }
          },
          {
            "attributes": {},
            "guid": "d4a744a2-041d-c558-dcf1-0bd86399a500",
            "registry": {
              "position": {
                "x": 602,
                "y": 380
              }
            }
          },
          {
            "attributes": {},
            "guid": "e3d8f760-c9ee-1c52-ceca-1e966158ec3a",
            "registry": {
              "position": {
                "x": 45,
                "y": 551
              }
            }
          },
          {
            "attributes": {},
            "guid": "ff32967b-910f-97d8-76b8-7cd6489d43ce",
            "registry": {
              "position": {
                "x": 390,
                "y": 52
              }
            }
          }
        ],
        "MetaAspectSet_d1568692-f853-8aaf-b583-f671fc7def82": [
          {
            "attributes": {},
            "guid": "0eb1dae1-96b8-4f47-a3f9-a0cd533297b9",
            "registry": {
              "position": {
                "x": 314,
                "y": 173
              }
            }
          },
          {
            "attributes": {},
            "guid": "3a6e7553-2bbd-997d-2dbe-c5dec5f95d6d",
            "registry": {
              "position": {
                "x": 511,
                "y": 225
              }
            }
          },
          {
            "attributes": {},
            "guid": "4718381b-9129-a50d-a185-f28e39736425",
            "registry": {
              "position": {
                "x": 339,
                "y": 348
              }
            }
          },
          {
            "attributes": {},
            "guid": "747d624d-6b22-6fa7-c13b-4811d2770cf5",
            "registry": {
              "position": {
                "x": 84,
                "y": 394
              }
            }
          },
          {
            "attributes": {},
            "guid": "98746c70-6211-e723-fe04-7d4e7166c04d",
            "registry": {
              "position": {
                "x": 76,
                "y": 246
              }
            }
          },
          {
            "attributes": {},
            "guid": "bd4a9e60-8153-6f3c-575c-d022d2a493ba",
            "registry": {
              "position": {
                "x": 659,
                "y": 80
              }
            }
          },
          {
            "attributes": {},
            "guid": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
            "registry": {
              "position": {
                "x": 100,
                "y": 100
              }
            }
          },
          {
            "attributes": {},
            "guid": "d4a744a2-041d-c558-dcf1-0bd86399a500",
            "registry": {
              "position": {
                "x": 602,
                "y": 380
              }
            }
          },
          {
            "attributes": {},
            "guid": "e3d8f760-c9ee-1c52-ceca-1e966158ec3a",
            "registry": {
              "position": {
                "x": 45,
                "y": 551
              }
            }
          },
          {
            "attributes": {},
            "guid": "ff32967b-910f-97d8-76b8-7cd6489d43ce",
            "registry": {
              "position": {
                "x": 390,
                "y": 52
              }
            }
          }
        ]
      },
      "constraints": {}
    },
    "3a6e7553-2bbd-997d-2dbe-c5dec5f95d6d": {
      "attributes": {
        "name": "cPrime"
      },
      "base": "0eb1dae1-96b8-4f47-a3f9-a0cd533297b9",
      "meta": {
        "children": {
          "items": [
            "e3d8f760-c9ee-1c52-ceca-1e966158ec3a"
          ],
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ]
        },
        "aspects": {
          "odds": [
            "98746c70-6211-e723-fe04-7d4e7166c04d",
            "e3d8f760-c9ee-1c52-ceca-1e966158ec3a"
          ]
        }
      },
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "0eb1dae1-96b8-4f47-a3f9-a0cd533297b9"
      },
      "registry": {
        "position": {
          "x": 511,
          "y": 225
        }
      },
      "sets": {
        "odds": [],
        "onlyOne": []
      },
      "constraints": {}
    },
    "4718381b-9129-a50d-a185-f28e39736425": {
      "attributes": {
        "aInt": null,
        "aSt": "empty string",
        "name": "attribute"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "aInt": {
            "type": "integer",
            "default": null
          },
          "aSt": {
            "type": "string",
            "default": "empty string"
          }
        }
      },
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "position": {
          "x": 339,
          "y": 348
        }
      },
      "sets": {},
      "constraints": {}
    },
    "747d624d-6b22-6fa7-c13b-4811d2770cf5": {
      "attributes": {
        "name": "empty2"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {},
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "position": {
          "x": 84,
          "y": 394
        }
      },
      "sets": {},
      "constraints": {}
    },
    "98746c70-6211-e723-fe04-7d4e7166c04d": {
      "attributes": {
        "name": "empty1"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {},
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "position": {
          "x": 76,
          "y": 246
        }
      },
      "sets": {},
      "constraints": {}
    },
    "bd4a9e60-8153-6f3c-575c-d022d2a493ba": {
      "attributes": {
        "name": "pPrime"
      },
      "base": "ff32967b-910f-97d8-76b8-7cd6489d43ce",
      "meta": {
        "pointers": {
          "ptr": {
            "items": [
              "e3d8f760-c9ee-1c52-ceca-1e966158ec3a"
            ],
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          },
          "ptr3": {
            "items": [
              "e3d8f760-c9ee-1c52-ceca-1e966158ec3a"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          }
        }
      },
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "ff32967b-910f-97d8-76b8-7cd6489d43ce",
        "ptr3": null
      },
      "registry": {
        "position": {
          "x": 659,
          "y": 80
        }
      },
      "sets": {},
      "constraints": {}
    },
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": {
      "attributes": {
        "name": "FCO"
      },
      "base": null,
      "meta": {
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "children": {
          "minItems": [],
          "maxItems": [],
          "items": []
        }
      },
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": null
      },
      "registry": {
        "DisplayFormat": "$name",
        "PortSVGIcon": "",
        "SVGIcon": "",
        "decorator": "",
        "isAbstract": false,
        "isPort": false,
        "position": {
          "x": 100,
          "y": 100
        }
      },
      "sets": {},
      "constraints": {
        "meta": {
          "script": "function(core, node, callback) {\n    \"use strict\";\n    var error = null,\n        returnValue = {hasViolation:false,message:\"\"},\n        i,\n        neededChekings = 4,\n        meta = core.getJsonMeta(node),\n        typeIndexOfChild = function(typePathsArray,childNode){\n            var index = -1;\n\n            while(childNode && index === -1){\n                index = typePathsArray.indexOf(core.getPath(childNode));\n                childNode = core.getBase(childNode);\n            }\n\n            return index;\n        },\n        checkChildrenRules = function(){\n            var childCount = [],\n                index;\n            core.loadChildren(node,function(err,children){\n                if(err){\n                    returnValue.message += \"error during loading of node\\'s children\\n\";\n                    error = error || err;\n                    return checkingDone();\n                }\n\n                //global count check\n                //min\n                if(meta.children.min && meta.children.min !== -1){\n                    if(children.length < meta.children.min){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"node hase fewer nodes than needed\\n\";\n                    }\n                }\n                //max\n                if(meta.children.max && meta.children.max !== -1){\n                    if(children.length > meta.children.max){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"node hase more nodes than allowed\\n\";\n                    }\n                }\n\n                //typedCounts\n                for(i=0;i<meta.children.items.length;i++){\n                    childCount.push(0);\n                }\n                for(i=0;i<children.length;i++){\n                    index = typeIndexOfChild(meta.children.items,children[i]);\n                    if(index === -1 ){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"child \" + core.getGuid(children[i]) +\" is from prohibited type\\n\";\n                    }\n                    else {\n                        childCount[index]++;\n                    }\n                }\n                for(i=0;i<meta.children.items.length;i++){\n                    //min\n                    if(meta.children.minItems[i] !== -1){\n                        if(meta.children.minItems[i] > childCount[i]){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"too few type \"+ meta.children.items[i] +\" children\\n\";\n                        }\n                    }\n                    //max\n                    if(meta.children.maxItems[i] !== -1){\n                        if(meta.children.maxItems[i] < childCount[i]){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"too many type \"+ meta.children.items[i] +\" children\\n\";\n                        }\n                    }\n                }\n                return checkingDone();\n            });\n        },\n        checkPointerRules = function(){\n            //TODO currently there is no quantity check\n            var validNames = core.getValidPointerNames(node),\n                names = core.getPointerNames(node),\n                checkPointer = function(name){\n                    core.loadPointer(node,name,function(err,target){\n                        if(err || !target){\n                            error = error || err;\n                            returnValue.message += \"error during pointer \"+ name +\" load\\n\";\n                            return checkDone();\n                        }\n\n                        if(!core.isValidTargetOf(target,node,name)){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"target of pointer \"+ name +\" is invalid\\n\";\n                        }\n                        return checkDone();\n                    });\n                },\n                checkDone = function(){\n                    if(--needs === 0){\n                        checkingDone();\n                    }\n                },\n                needs,i;\n            \n            needs = names.length;\n            if(needs > 0){\n                for(i=0;i<names.length;i++){\n                    if(validNames.indexOf(names[i]) === -1){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \" invalid pointer \"+ names[i] +\" has been found\\n\";\n                        checkDone();\n                    } else {\n                        checkPointer(names[i]);\n                    }\n\n                }\n            } else {\n                checkDone();\n            }\n\n        },\n        checkSetRules = function(){\n            //TODO this part is missing yet\n            checkingDone();\n        },\n        checkAttributeRules = function(){\n            var names = core.getAttributeNames(node),\n                validNames = core.getValidAttributeNames(node);\n            for(i=0;i<names.length;i++){\n                if(validNames.indexOf(names[i]) !== -1){\n                    if(!core.isValidAttributeValueOf(node,names[i],core.getAttribute(node,names[i]))){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"attribute \"+names[i]+\" has invalid value\\n\";\n                    }\n                }\n                else {\n                    returnValue.hasViolation = true;\n                    returnValue.message += \"node has an undefined attribute: \"+names[i];\n                }\n            }\n            checkingDone();\n        },\n        checkingDone = function(){\n            if(--neededChekings === 0){\n                callback(error,returnValue);\n            }\n        };\n\n    checkChildrenRules();\n    checkPointerRules();\n    checkSetRules();\n    checkAttributeRules();\n}",
          "priority": 10,
          "info": "this constraint will check all the meta rules defined to an object"
        }
      }
    },
    "d4a744a2-041d-c558-dcf1-0bd86399a500": {
      "attributes": {
        "aFloat": 0,
        "name": "aPrime"
      },
      "base": "4718381b-9129-a50d-a185-f28e39736425",
      "meta": {
        "attributes": {
          "aFloat": {
            "type": "float",
            "default": 0
          }
        }
      },
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "4718381b-9129-a50d-a185-f28e39736425"
      },
      "registry": {
        "position": {
          "x": 602,
          "y": 380
        }
      },
      "sets": {},
      "constraints": {}
    },
    "e3d8f760-c9ee-1c52-ceca-1e966158ec3a": {
      "attributes": {
        "name": "empty3"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {},
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "position": {
          "x": 45,
          "y": 551
        }
      },
      "sets": {},
      "constraints": {}
    },
    "ff32967b-910f-97d8-76b8-7cd6489d43ce": {
      "attributes": {
        "name": "pointer"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "pointers": {
          "ptr": {
            "items": [
              "98746c70-6211-e723-fe04-7d4e7166c04d"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          },
          "ptr2": {
            "items": [
              "747d624d-6b22-6fa7-c13b-4811d2770cf5",
              "e3d8f760-c9ee-1c52-ceca-1e966158ec3a"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1,
              -1
            ],
            "maxItems": [
              1,
              1
            ]
          }
        }
      },
      "parent": "153d06f6-478c-0812-776b-94327a563db9",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
        "ptr": null,
        "ptr2": null
      },
      "registry": {
        "position": {
          "x": 390,
          "y": 52
        }
      },
      "sets": {},
      "constraints": {}
    }
  },
  "metaSheets": {}
}