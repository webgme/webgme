/*
 * Copyright (C) 2013 Vanderbilt University, All rights reserved.
 *
 * Authors:
 */


define(['js/Decorators/DecoratorBase',
    './DiagramDesigner/<%= decorator.name %>Decorator.DiagramDesignerWidget',
    './PartBrowser/<%= decorator.name %>Decorator.PartBrowserWidget'], function (DecoratorBase,
        <%= decorator.name %>DecoratorDiagramDesignerWidget,
        <%= decorator.name %>DecoratorPartBrowserWidget
    ) {
    'use strict';

    /**
    * A module representing a decorator for the <%= decorator.name %> Modeling Language.
    * @exports <%= decorator.name %>Decorator
    * @version 1.0
    */
    var <%= decorator.name %>Decorator,
        __parent__ = DecoratorBase,
        __parent_proto__ = DecoratorBase.prototype,
        DECORATOR_ID = "<%= decorator.name %>Decorator";

    /**
     * Represents a <%= decorator.name %>Decorator factory.
     * @constructor
     * @param {object} params Parameters for this object.
     */
    <%= decorator.name %>Decorator = function (params) {
        var opts = _.extend( {"loggerName": this.DECORATORID}, params);

        __parent__.apply(this, [opts]);

        this.logger.debug("<%= decorator.name %>Decorator ctor");
    };

    _.extend(<%= decorator.name %>Decorator.prototype, __parent_proto__);
    <%= decorator.name %>Decorator.prototype.DECORATORID = DECORATOR_ID;

    /*********************** OVERRIDE DecoratorBase MEMBERS **************************/

    /**
     * Initializes the supported widget map for this decorator.
     *
     * @see <%= decorator.name %>DecoratorDiagramDesignerWidget:<%= decorator.name %>DecoratorDiagramDesignerWidget
     * @see <%= decorator.name %>DecoratorPartBrowserWidget:<%= decorator.name %>DecoratorPartBrowserWidget
     */
    <%= decorator.name %>Decorator.prototype.initializeSupportedWidgetMap = function () {
        this.supportedWidgetMap = {'DiagramDesigner': <%= decorator.name %>DecoratorDiagramDesignerWidget,
                                   'PartBrowser': <%= decorator.name %>DecoratorPartBrowserWidget};
    };

    return <%= decorator.name %>Decorator;
});
