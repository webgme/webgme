/*
 * Copyright (C) 2014 Vanderbilt University, All rights reserved.
 * 
 * AUTO GENERATED CODE FOR PROJECT <%=name%>
 */


define(['underscore',
        'js/Utils/METAAspectHelper'], function (_underscore,
                                                METAAspectHelper) {
    "use strict";
    var _metaID = '<%=name%>.META.js';

    //META ASPECT TYPES
    var _metaTypes = {
<%var metaNodeInfo, i;
for (i = 0; i < metaNodes.length; i += 1) {
    metaNodeInfo = metaNodes[i];
%>        '<%=metaNodeInfo.name%>': '<%=metaNodeInfo.path%>',
<%}%>
    };

    //META ASPECT TYPE CHECKING
<%for (i = 0; i < metaNodes.length; i += 1) {
        metaNodeInfo = metaNodes[i];
%>    var _is<%=metaNodeInfo.name%> = function (objID) { return METAAspectHelper.isMETAType(objID, _metaTypes.<%=metaNodeInfo.name%>); };
<%}%>

    var _queryMetaTypes = function () {
        var nMetaTypes = METAAspectHelper.getMETAAspectTypes(),
            m;

        if (!_.isEqual(_metaTypes,nMetaTypes)) {
            var metaOutOfDateMsg = _metaID + " is not up to date with the latest META aspect. Please update your local copy!";
            if (console.error) {
                console.error(metaOutOfDateMsg);
            } else {
                console.log(metaOutOfDateMsg);
            }

            for (m in _metaTypes) {
                if (_metaTypes.hasOwnProperty(m)) {
                    delete _metaTypes[m];
                }
            }

            for (m in nMetaTypes) {
                if (nMetaTypes.hasOwnProperty(m)) {
                    _metaTypes[m] = nMetaTypes[m];
                }
            }
        }
    };

    //hook up to META ASPECT CHANGES
    METAAspectHelper.addEventListener(METAAspectHelper.events.META_ASPECT_CHANGED, function () {
        _queryMetaTypes();
    });

    //generate the META types on the first run
    _queryMetaTypes();

    //return utility functions
    return {
        META_TYPES: _metaTypes,
        TYPE_INFO: {
<%for (i = 0; i < metaNodes.length; i += 1) {
    metaNodeInfo = metaNodes[i];
%>            is<%=metaNodeInfo.name%>: _is<%=metaNodeInfo.name%>,
<%}%>
        }
    };
});