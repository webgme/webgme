/* Generated file based on ejs templates */
define([], function() {
    return {
    "DiagramDesigner/__ID__Decorator.DiagramDesignerWidget.js.ejs": "/*globals define, _*/\r\n/*jshint browser: true, camelcase: false*/\r\n/**\r\n * This decorator inherits from the ModelDecorator.DiagramDesignerWidget.\r\n * With no changes to the methods - it will functions just like the ModelDecorator.\r\n *\r\n * For more methods see the ModelDecorator.DiagramDesignerWidget.js in the webgme repository.\r\n *\r\n * @author pmeijer / https://github.com/pmeijer\r\n */\r\n\r\ndefine([\r\n    'js/RegistryKeys',\r\n    'js/Constants',\r\n    'decorators/ModelDecorator/DiagramDesigner/ModelDecorator.DiagramDesignerWidget',\r\n    'jquery',\r\n    'underscore'\r\n], function (\r\n    REGISTRY_KEYS,\r\n    CONSTANTS,\r\n    ModelDecoratorDiagramDesignerWidget) {\r\n\r\n    'use strict';\r\n\r\n    var <%=id%>Decorator,\r\n        DECORATOR_ID = '<%=id%>Decorator';\r\n\r\n    <%=id%>Decorator = function (options) {\r\n        var opts = _.extend({}, options);\r\n\r\n        ModelDecoratorDiagramDesignerWidget.apply(this, [opts]);\r\n\r\n        this.logger.debug('<%=id%>Decorator ctor');\r\n    };\r\n\r\n    <%=id%>Decorator.prototype = Object.create(ModelDecoratorDiagramDesignerWidget.prototype);\r\n    <%=id%>Decorator.prototype.constructor = <%=id%>Decorator;\r\n    <%=id%>Decorator.prototype.DECORATORID = DECORATOR_ID;\r\n\r\n    <%=id%>Decorator.prototype.on_addTo = function () {\r\n        var client = this._control._client,\r\n            nodeObj = client.getNode(this._metaInfo[CONSTANTS.GME_ID]);\r\n\r\n        this.logger.debug('This node was added to the canvas', nodeObj);\r\n\r\n        // Call the base-class method..\r\n        ModelDecoratorDiagramDesignerWidget.prototype.on_addTo.apply(this, arguments);\r\n    };\r\n\r\n    <%=id%>Decorator.prototype.destroy = function () {\r\n        ModelDecoratorDiagramDesignerWidget.prototype.destroy.apply(this, arguments);\r\n    };\r\n\r\n    <%=id%>Decorator.prototype.update = function () {\r\n        var client = this._control._client,\r\n            nodeObj = client.getNode(this._metaInfo[CONSTANTS.GME_ID]);\r\n\r\n        this.logger.debug('This node is on the canvas and received an update event', nodeObj);\r\n\r\n        ModelDecoratorDiagramDesignerWidget.prototype.update.apply(this, arguments);\r\n    };\r\n\r\n    return <%=id%>Decorator;\r\n});",
    "PartBrowser/__ID__Decorator.PartBrowserWidget.js.ejs": "/*globals define, _*/\r\n/*jshint browser: true*/\r\n/**\r\n * This decorator inherits from the ModelDecorator.PartBrowserWidget.\r\n * With no changes to the methods - it will functions just like the ModelDecorator.\r\n *\r\n * For more methods see the ModelDecorator.PartBrowserWidget.js in the webgme repository.\r\n *\r\n * @author pmeijer / https://github.com/pmeijer\r\n */\r\n\r\ndefine([\r\n    'decorators/ModelDecorator/PartBrowser/ModelDecorator.PartBrowserWidget',\r\n    'jquery',\r\n    'underscore'\r\n], function (ModelDecoratorPartBrowserWidget) {\r\n\r\n    'use strict';\r\n\r\n    var <%=id%>DecoratorPartBrowserWidget,\r\n        DECORATOR_ID = '<%=id%>DecoratorPartBrowserWidget';\r\n\r\n    <%=id%>DecoratorPartBrowserWidget = function (options) {\r\n        var opts = _.extend({}, options);\r\n\r\n        ModelDecoratorPartBrowserWidget.apply(this, [opts]);\r\n\r\n        this.logger.debug('<%=id%>DecoratorPartBrowserWidget ctor');\r\n    };\r\n\r\n    _.extend(<%=id%>DecoratorPartBrowserWidget.prototype, ModelDecoratorPartBrowserWidget.prototype);\r\n    <%=id%>DecoratorPartBrowserWidget.prototype.DECORATORID = DECORATOR_ID;\r\n\r\n    /*********************** OVERRIDE DiagramDesignerWidgetDecoratorBase MEMBERS **************************/\r\n\r\n    <%=id%>DecoratorPartBrowserWidget.prototype.beforeAppend = function () {\r\n        ModelDecoratorPartBrowserWidget.prototype.beforeAppend.apply(this, arguments);\r\n    };\r\n\r\n    <%=id%>DecoratorPartBrowserWidget.prototype.afterAppend = function () {\r\n        ModelDecoratorPartBrowserWidget.prototype.afterAppend.apply(this, arguments);\r\n    };\r\n\r\n    <%=id%>DecoratorPartBrowserWidget.prototype.update = function () {\r\n        ModelDecoratorPartBrowserWidget.prototype.update.apply(this, arguments);\r\n    };\r\n\r\n    return <%=id%>DecoratorPartBrowserWidget;\r\n});",
    "__ID__Decorator.js.ejs": "/*globals define, _*/\r\n/*jshint browser: true, camelcase: false*/\r\n/**\r\n * @author pmeijer / https://github.com/pmeijer\r\n */\r\n\r\ndefine([\r\n    'js/Decorators/DecoratorBase',\r\n    './DiagramDesigner/<%=id%>Decorator.DiagramDesignerWidget',\r\n    './PartBrowser/<%=id%>Decorator.PartBrowserWidget'\r\n], function (DecoratorBase, <%=id%>DecoratorDiagramDesignerWidget, <%=id%>DecoratorPartBrowserWidget) {\r\n\r\n    'use strict';\r\n\r\n    var <%=id%>Decorator,\r\n        DECORATOR_ID = '<%=id%>Decorator';\r\n\r\n    <%=id%>Decorator = function (params) {\r\n        var opts = _.extend({loggerName: this.DECORATORID}, params);\r\n\r\n        DecoratorBase.apply(this, [opts]);\r\n\r\n        this.logger.debug('<%=id%>Decorator ctor');\r\n    };\r\n\r\n    _.extend(<%=id%>Decorator.prototype, DecoratorBase.prototype);\r\n    <%=id%>Decorator.prototype.DECORATORID = DECORATOR_ID;\r\n\r\n    /*********************** OVERRIDE DecoratorBase MEMBERS **************************/\r\n\r\n    <%=id%>Decorator.prototype.initializeSupportedWidgetMap = function () {\r\n        this.supportedWidgetMap = {\r\n            DiagramDesigner: <%=id%>DecoratorDiagramDesignerWidget,\r\n            PartBrowser: <%=id%>DecoratorPartBrowserWidget\r\n        };\r\n    };\r\n\r\n    return <%=id%>Decorator;\r\n});"
}});